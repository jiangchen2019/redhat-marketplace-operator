name: Scorecard

# on:
#   push:
#     branches: [ master, develop, release/* ]
#   pull_request:
#     branches: [ master, develop, release/* ]
#
on:
  pull_request:
    branches:
      - master
      - develop
      - 'release/stable'
      - 'hotfix/stable'

jobs:
  scorecard:
    name: Scorecard
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
        id: go

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - uses: engineerd/setup-kind@v0.3.0

      - name: Checking cluster info
        run: |
          kubectl cluster-info
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}

      - name: Get Vars
        id: vars
        run: |
          echo "::set-output name=version::$(make current-version)"
          echo "::set-output name=tag::sha-$(git rev-parse --short HEAD)"
          echo "::set-output name=hash::hash-${FILEHASH:0:6}"
        env:
          FILEHASH: ${{ hashFiles('build/**', 'assets/**', 'cmd/**', 'pkg/**', 'version/**', 'go.sum', 'go.mod') }}

      - name: Install operator-sdk
        run: |
          cd /tmp
          curl -LO https://github.com/operator-framework/operator-sdk/releases/download/${RELEASE_VERSION}/operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu
          chmod +x operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu && sudo mkdir -p /usr/local/bin/ && sudo cp operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu /usr/local/bin/operator-sdk && rm operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu
          python -m pip install --upgrade pip
          pip3 install operator-courier
          sudo snap install yq
          echo "::add-path::/usr/local/bin"
        env:
          RELEASE_VERSION: v0.18.0

      - name: Run scorecard
        continue-on-error: true
        run: |
          echo "Updating osdk to version ${VERSION}"
          yq w -i .osdk-scorecard.yaml 'scorecard.plugins.*.olm.csv-path' deploy/olm-catalog/redhat-marketplace-operator/${VERSION}/redhat-marketplace-operator.v${VERSION}.clusterserviceversion.yaml
          kubectl create ns openshift-redhat-marketplace
          operator-sdk scorecard -b ./deploy/olm-catalog/redhat-marketplace-operator --config ./.osdk-scorecard.yaml -o json
        env:
          VERSION: ${{ steps.vars.outputs.version }}
