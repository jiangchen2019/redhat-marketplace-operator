name: Build and Test

on:
  push:
    branches: [master, develop, feature/**, hotfix/**, release/**, bugfix/**]
    tags:
      - '*'
  pull_request:
    branches: [master, develop, feature/**, hotfix/**, release/**, bugfix/**]

jobs:
  build:
    name: Test
    runs-on: ubuntu-latest
    env:
      IMAGE_REGISTRY: quay.io/rh-marketplace

    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Check licenses - run 'make add-licenses' if this errors
        run: make check-licenses

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Test
        run: make test

      - name: Get Version
        id: version
        run: echo "::set-output name=version::$(go run scripts/version version)"

      - name: Get Tag
        id: tag
        run: echo "::set-output name=tag::sha-$(git rev-parse --short HEAD)"

  deploy-quay:
    name: Deploy Quay
    runs-on: ubuntu-latest
    needs: [ build ]
    env:
      OPERATOR_IMAGE: redhat-marketplace-operator

    steps:
      - name: Build
        run: make build

      - name: Login
        run: make docker-login
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Deploy Quay
        run: make tag-and-push
        with:
          TAG: "quay.io/rh-marketplace/redhat-marketplace-operator:${{ needs.build.outputs.tag }}"

  deploy-pc:
    name: Deploy PC
    runs-on: ubuntu-latest
    needs: [ build ]
    env:
      OPERATOR_IMAGE: redhat-marketplace-operator
    if: ${{ startsWith(github.ref, 'master') || startsWith(github.ref, 'release') }}
    steps:
      - name: Build
        run: make build
        with:
          OPREATOR_IMAGE: redhat-marketplace

      - name: Login
        run: make docker-login
        with:
          username: ${{ secrets.PC_DOCKER_USERNAME }}
          password: ${{ secrets.PC_DOCKER_PASSWORD }}

      - name: Deploy PC
        run: make tag-and-push
        with:
          TAG: "scan.connect.redhat.com/ospid-c93f69b6-cb04-437b-89d6-e5220ce643cd/redhat-marketplace-operator${{ needs.build.outputs.tag }}"

  create-bundle:

    name: Create Bundle
    needs: [ build ]
    env:
      OPERATOR_IMAGE: "quay.io/rh-marketplace/redhat-marketplace-operator:${{ needs.build.outputs.tag }}"

    steps:
      - name: Install operator-sdk
        run: |
          curl -LO https://github.com/operator-framework/operator-sdk/releases/download/${RELEASE_VERSION}/operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu
          curl -LO https://github.com/operator-framework/operator-sdk/releases/download/${RELEASE_VERSION}/operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu.asc
          gpg --verify operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu.asc
          chmod +x operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu && sudo mkdir -p /usr/local/bin/ && sudo cp operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu /usr/local/bin/operator-sdk && rm operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu
          pip3 install operator-courier
        with:
          RELEASE_VERSION=v0.17.1
      - name: Create CSV
        id: bundle
        run: make bundle
      - name: Upload bundle to actions
        uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.bundle.outputs.bundlename }}
      - name: Login
        run: make docker-login
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Create manifest image
        run: make generate-csv-manifest generate-bundleimage
      - name: Push image
        run: make push $
