name: Build and Test

on:
  push:
    branches: [master, develop, feature/**, hotfix/**, release/**, bugfix/**]
    tags:
      - '*'
  pull_request:
    branches: [master, develop, feature/**, hotfix/**, release/**, bugfix/**]

env:
  pushImages: false
  cache: false
  #IMAGE_REGISTRY: quay.io/zach-source
  IMAGE_REGISTRY: quay.io/rh-marketplace

jobs:
  build:
    name: Test
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version.outputs.version }}
      tag: ${{ steps.version.outputs.tag }}

    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Cache go modules
        uses: actions/cache@v1
        if: env.cache == 'true'
        env:
          cache-name: cache-go-modules
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Test
        run: make test

      - name: Get Version
        id: version
        run: echo "::set-output name=version::$(make current-version)"

      - name: Get Tag
        id: tag
        run: echo "::set-output name=tag::sha-$(git rev-parse --short HEAD)"

  deploy-quay:
    name: Deploy Quay
    runs-on: ubuntu-latest
    needs: [build]
    if: startsWith(github.ref, 'master') || startsWith(github.ref, 'release') || startsWith(github.ref, 'develop') || github.ref == 'feature/buildAndTest'
    env:
      OPERATOR_IMAGE: redhat-marketplace-operator

    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Cache go modules
        uses: actions/cache@v1
        if: env.cache == 'true'
        env:
          cache-name: cache-go-modules
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: make build

      - name: Login
        run: make docker-login
        env:
          DOCKER_USER: ${{ secrets.quayUser }}
          DOCKER_PASSWORD: ${{ secrets.quayPassword }}
          REGISTRY: quay.io
      - name: Deploy Quay
        if: env.pushImage == 'true'
        run: make tag-and-push
        env:
          TAG: quay.io/rh-marketplace/redhat-marketplace-operator:${{ needs.build.outputs.tag }}

  deploy-pc:
    name: Deploy Red Hat Scan
    runs-on: ubuntu-latest
    needs: [build]
    env:
      OPERATOR_IMAGE: redhat-marketplace-operator
    if: startsWith(github.ref, 'master') || startsWith(github.ref, 'release') || github.ref == 'feature/buildAndTest'
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Cache go modules
        uses: actions/cache@v1
        if: env.cache == 'true'
        env:
          cache-name: cache-go-modules
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build
        run: make build
        with:
          OPREATOR_IMAGE: redhat-marketplace

      - name: Login
        run: make docker-login
        env:
          DOCKER_USER: ${{ secrets.pcUser }}
          DOCKER_PASSWORD: ${{ secrets.pcPassword }}
          REGISTRY: scan.connect.redhat.com

      - name: Deploy PC
        if: false
        #if: env.pushImage == 'true'
        run: make tag-and-push
        env:
          TAG: scan.connect.redhat.com/ospid-c93f69b6-cb04-437b-89d6-e5220ce643cd/redhat-marketplace-operator:${{ needs.build.outputs.tag }}

  create-bundle:
    name: Create Bundle
    runs-on: ubuntu-latest
    needs: [build]
    env:
      OPERATOR_IMAGE: quay.io/rh-marketplace/redhat-marketplace-operator:${{ needs.build.outputs.tag }}

    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14
        id: go

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Install operator-sdk
        run: |
          cd /tmp
          curl -LO https://github.com/operator-framework/operator-sdk/releases/download/${RELEASE_VERSION}/operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu
          chmod +x operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu && sudo mkdir -p /usr/local/bin/ && sudo cp operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu /usr/local/bin/operator-sdk && rm operator-sdk-${RELEASE_VERSION}-x86_64-linux-gnu
          python -m pip install --upgrade pip
          pip3 install operator-courier
        with:
          RELEASE_VERSION: v0.17.0
      - name: Create CSV
        id: bundle
        run: make bundle
      - name: Upload bundle to actions
        uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.bundle.outputs.bundlename }}
      - name: Login
        run: make docker-login
        env:
          DOCKER_USER: ${{ secrets.quayUser }}
          DOCKER_PASSWORD: ${{ secrets.quayPassword }}
          REGISTRY: quay.io
      - name: Create manifest image
        run: |
          export PATH=/usr/local/bin/operator-sdk:${PATH}
          make generate-csv-manifest generate-bundleimage
        env:
      - name: Push image
        run: make push
        if: env.pushImage == 'true'
        with:
          OPERATOR_IMAGE: quay.io/rh-marketplace/operator-manifest:${{ needs.build.outputs.version }}
