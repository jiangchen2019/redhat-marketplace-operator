apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: meterbases.marketplace.redhat.com
spec:
  group: marketplace.redhat.com
  names:
    kind: MeterBase
    listKind: MeterBaseList
    plural: meterbases
    singular: meterbase
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: MeterBase is the resource that sets up Metering for Red Hat Marketplace.
        This is an internal resource not meant to be modified directly.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: MeterBaseSpec defines the desired state of MeterBase
          properties:
            enabled:
              description: Is metering is enabled on the cluster? Default is true
              type: boolean
            prometheus:
              description: Prometheus deployment configuration.
              properties:
                resources:
                  description: Resource requirements for the deployment. Default is
                    not defined.
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                selector:
                  additionalProperties:
                    type: string
                  description: Selector for the pods in the Prometheus deployment
                  type: object
                storage:
                  description: Storage for the deployment.
                  properties:
                    class:
                      description: Storage class for the prometheus stateful set.
                        Default is "" i.e. default.
                      type: string
                    size:
                      description: Storage size for the prometheus deployment. Default
                        is 40Gi.
                      format: quantity
                      type: string
                  type: object
              required:
              - storage
              type: object
          required:
          - enabled
          type: object
        status:
          description: MeterBaseStatus defines the observed state of MeterBase.
          properties:
            prometheusStatus:
              description: PrometheusStatus is the most recent observed status of
                the Prometheus cluster. Read-only. Not included when requesting from
                the apiserver, only from the Prometheus
              properties:
                availableReplicas:
                  description: Total number of available pods (ready for at least
                    minReadySeconds) targeted by this Prometheus deployment.
                  format: int32
                  type: integer
                paused:
                  description: Represents whether any actions on the underlaying managed
                    objects are being performed. Only delete actions will be performed.
                  type: boolean
                replicas:
                  description: Total number of non-terminated pods targeted by this
                    Prometheus deployment (their labels match the selector).
                  format: int32
                  type: integer
                unavailableReplicas:
                  description: Total number of unavailable pods targeted by this Prometheus
                    deployment.
                  format: int32
                  type: integer
                updatedReplicas:
                  description: Total number of non-terminated pods targeted by this
                    Prometheus deployment that have the desired version spec.
                  format: int32
                  type: integer
              required:
              - availableReplicas
              - paused
              - replicas
              - unavailableReplicas
              - updatedReplicas
              type: object
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
